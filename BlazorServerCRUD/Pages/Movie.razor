@page "/movie"
@page "/movie/{id:int}"
@inject IMovieService MovieService

@if(Id==null)
{
    <h3>Add a new movie</h3>
}
else
{
    <h3>Edit "@movie.Name"</h3>
}

<EditForm Model="movie" OnSubmit="HandleSubmit">
    <div>
        <label for="name">Name</label>
        <InputText id="name" @bind-Value="movie.Name" class="form-control"></InputText>
    </div>
    <div>
        <label for="Company">Company</label>
        <InputText id="company" @bind-Value="movie.Company" class="form-control"></InputText>
    </div>
    <div>
        <label for="ReleaseDate">Release Date</label>
        <InputDate id="releasedate" @bind-Value="movie.ReleaseDate" class="form-control"></InputDate>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    @if (Id != null)
    {
        <button type="button" class="btn btn-danger" @onclick="DeleteMovie">Delete Movie</button>
    }
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    Data.Movie movie = new Data.Movie();

    protected override void OnInitialized()
    {
        btnText = Id == null ? "Save New Game" : "Update Game";
    }

    protected override async Task OnParametersSetAsync()
    {
        if(Id!=null)
            movie = await MovieService.ShowMovie((int)Id); 
    }

    async Task HandleSubmit()
    {
        if(Id==null)
        {
            await MovieService.AddMovie(movie);
        }
        else
        {
            await MovieService.EditMovie(movie, (int)Id);
        }
    }

    async Task DeleteMovie()
    {
        await MovieService.DeleteMovie(movie.Id);
    }
}
